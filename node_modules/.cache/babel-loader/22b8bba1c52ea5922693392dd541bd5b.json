{"ast":null,"code":"var _jsxFileName = \"/Users/yunhee/Dropbox/Cod/MoodMemo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useRef, useEffect } from \"react\";\n/*import { BrowserRouter, Routes } from \"react-router-dom\";*/\n\nimport DiaryEditor from './DiaryEditor.jsx';\nimport DiaryList from './DiaryList'; // https://jsonplaceholder.typicode.com/comments\n\n/*\nconst dummyList = [\n  {\n    id:1,\n    author:\"\",\n    content:\"\",\n    emotion:1,\n    created_date: new Date().getTime(),\n  },\n  {\n    id:2,\n    author:\"\",\n    content:\"\",\n    emotion:1,\n    created_date: new Date().getTime(),\n  },\n  {\n    id:3,\n    author:\"\",\n    content:\"\",\n    emotion:1,\n    created_date: new Date().getTime(),\n  }\n]\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then(res => res.json());\n    console.log(res);\n    const initData = res.slice(0, 20);\n  }; // promise를 반환하는 비동기 함수\n\n\n  useEffect(() => {\n    // callback\n    getData();\n  }, []);\n\n  const onCreate = (author, content, emotion) => {\n    // 2) DiaryEditor에서 파라미터 전달받음\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]); // 새로운 아이템에 기존 데이터를 이어붙인 형태로 setState\n  };\n\n  const onRemove = targetId => {\n    // 1) 매개 변수로 targetID 전달받음\n    console.log(`${targetId}가 삭제되었습니다.`);\n    const newDiaryList = data.filter(it => it.id !== targetId);\n    console.log(newDiaryList);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(data.map(it => it.id === targetId ? { ...it,\n      content: newContent\n    } : it));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      onRemove: onRemove,\n      diaryList: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2o8Xchl1A9LFe9GiqWSSYkjxPVs=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","useEffect","DiaryEditor","DiaryList","App","data","setData","dataId","getData","res","fetch","then","json","console","log","initData","slice","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","current","onRemove","targetId","newDiaryList","filter","it","onEdit","newContent","map"],"sources":["/Users/yunhee/Dropbox/Cod/MoodMemo/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useRef, useEffect } from \"react\";\n/*import { BrowserRouter, Routes } from \"react-router-dom\";*/\nimport DiaryEditor from './DiaryEditor.jsx';\nimport DiaryList from './DiaryList';\n\n// https://jsonplaceholder.typicode.com/comments\n\n/*\nconst dummyList = [\n  {\n    id:1,\n    author:\"\",\n    content:\"\",\n    emotion:1,\n    created_date: new Date().getTime(),\n  },\n  {\n    id:2,\n    author:\"\",\n    content:\"\",\n    emotion:1,\n    created_date: new Date().getTime(),\n  },\n  {\n    id:3,\n    author:\"\",\n    content:\"\",\n    emotion:1,\n    created_date: new Date().getTime(),\n  }\n]\n*/\n\nfunction App() {\n  \n  const [data, setData] = useState([]);\n\n  const dataId = useRef(0);\n\n  const getData = async() => {\n    const res = await fetch('https://jsonplaceholder.typicode.com/comments').then((res)=>res.json());\n    console.log(res);\n\n    const initData = res.slice(0,20)\n  }; // promise를 반환하는 비동기 함수\n\n\n  useEffect(()=> { // callback\n    getData();\n  }, []);\n\n  const onCreate = (author,content,emotion) => { // 2) DiaryEditor에서 파라미터 전달받음\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id : dataId.current\n    }\n    dataId.current += 1;\n    setData([newItem,...data]); // 새로운 아이템에 기존 데이터를 이어붙인 형태로 setState\n  };\n\n  const onRemove = (targetId) => { // 1) 매개 변수로 targetID 전달받음\n    console.log(`${targetId}가 삭제되었습니다.`);\n    const newDiaryList = data.filter((it) => it.id !== targetId);\n    console.log(newDiaryList);\n    setData(newDiaryList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(\n      data.map((it) => \n      it.id === targetId ? {...it, content:newContent} : it\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n    <DiaryEditor onCreate={onCreate}/>\n    <DiaryList onEdit={onEdit} onRemove={onRemove} diaryList={data}/>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA;;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAMQ,MAAM,GAAGP,MAAM,CAAC,CAAD,CAArB;;EAEA,MAAMQ,OAAO,GAAG,YAAW;IACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAAD,CAAL,CAAuDC,IAAvD,CAA6DF,GAAD,IAAOA,GAAG,CAACG,IAAJ,EAAnE,CAAlB;IACAC,OAAO,CAACC,GAAR,CAAYL,GAAZ;IAEA,MAAMM,QAAQ,GAAGN,GAAG,CAACO,KAAJ,CAAU,CAAV,EAAY,EAAZ,CAAjB;EACD,CALD,CANa,CAWV;;;EAGHf,SAAS,CAAC,MAAK;IAAE;IACfO,OAAO;EACR,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMS,QAAQ,GAAG,CAACC,MAAD,EAAQC,OAAR,EAAgBC,OAAhB,KAA4B;IAAE;IAC7C,MAAMC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;IACA,MAAMC,OAAO,GAAG;MACdN,MADc;MAEdC,OAFc;MAGdC,OAHc;MAIdC,YAJc;MAKdI,EAAE,EAAGlB,MAAM,CAACmB;IALE,CAAhB;IAOAnB,MAAM,CAACmB,OAAP,IAAkB,CAAlB;IACApB,OAAO,CAAC,CAACkB,OAAD,EAAS,GAAGnB,IAAZ,CAAD,CAAP,CAV2C,CAUf;EAC7B,CAXD;;EAaA,MAAMsB,QAAQ,GAAIC,QAAD,IAAc;IAAE;IAC/Bf,OAAO,CAACC,GAAR,CAAa,GAAEc,QAAS,YAAxB;IACA,MAAMC,YAAY,GAAGxB,IAAI,CAACyB,MAAL,CAAaC,EAAD,IAAQA,EAAE,CAACN,EAAH,KAAUG,QAA9B,CAArB;IACAf,OAAO,CAACC,GAAR,CAAYe,YAAZ;IACAvB,OAAO,CAACuB,YAAD,CAAP;EACD,CALD;;EAOA,MAAMG,MAAM,GAAG,CAACJ,QAAD,EAAWK,UAAX,KAA0B;IACvC3B,OAAO,CACLD,IAAI,CAAC6B,GAAL,CAAUH,EAAD,IACTA,EAAE,CAACN,EAAH,KAAUG,QAAV,GAAqB,EAAC,GAAGG,EAAJ;MAAQZ,OAAO,EAACc;IAAhB,CAArB,GAAmDF,EADnD,CADK,CAAP;EAKD,CAND;;EAQA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACA,QAAC,WAAD;MAAa,QAAQ,EAAEd;IAAvB;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,SAAD;MAAW,MAAM,EAAEe,MAAnB;MAA2B,QAAQ,EAAEL,QAArC;MAA+C,SAAS,EAAEtB;IAA1D;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GApDQD,G;;KAAAA,G;AAoDR;AAED,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}